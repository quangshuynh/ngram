Weekly lecture quiz password: StringRangeFile

- String
	- A sequence of characters 
	- Enclosed in quotes
	- A character can be
		- An upper or lowercase letter of the alphabet (a-z, A-Z)
		- A digit (0-9)
		- Punctuation like comma or period (",", ".")
		- Symbol like square bracket or curly brace
		- Whitespace including spaces ('   '), tabs ("\t"), and newlines ("\n")

- Strings as sequences
	- Each individual character has an index that can be used to access that character
	- The [] operator can be used in conjunction with a string to access an individual character
		- sith = "Palpatine"
		- P = sith[0]
	- It can also be used with negative numbers
		- master = "Yoda"
		- a = master[-1]

- String concatenation
	- The addition (+) operator can be used to concatenate strings
		- **x = "abc" + str(123)** will create the string "abc123" and assign it to x.
	- Concatenation only works if all values are strings


- Ranges
	- A Python type that represents a sequence of integers
	- ![[range.png]]
	- range(stop) will create a range from 0 to stop-1
	- range(start, stop) will create a range from start to stop-1
	  range(start, stop, k) will create a range from start to stop-1 that includes every kth number. k is also called the step.


- For loops
	- 	![[Pasted image 20230925081355.png]]


- A range is an ordered sequence of integers
- At the beginning of each iteration, the for loop will assign the next value in the sequence to a loop variable

- Strings and for loops
	- A for loop can be used to iterate over reach character in the sequence, one at a time


- ASCII
	- The American Standard Code for Information Interchange
	- ASCII is a subset of Unicode
		- Unicode is a much larger character standard that includes characters from many languages
	- Python has two built in functions for ASCII
		- ord(char) converts character to integer
		- chr(code) converts integer to character


- Slicing
	- Similar to creating a range
	- A way to create a list from an existing list
	- Slicing uses the ( : ) operator
	- The last value that it stops subtracts by 1


- Files
	- A file must be opened before the data inside it can be read in the program
	- Using open("") can be used to open and return the file at the specified path

- Removing whitespace
	- Using ("\n") at the end of every line will make a blank line in the file
	- Adding the *end* parameter to the print() function can be used to avoid adding extra new line
		- print(line, end="")
	- Using the function, strip(), will remove the leading and trailing whitespace

- Closing files
	- Calling close() on a file makes it available to use by other programs
	- If a file is not closed, it is still in use
		- If in use by one program, it cannot be used by another program

- With-as statement
	- The with-as statement can be used to open a file and makes sure a file is automatically closed when done


- Complexity
	- The complexity of an algorithm refers to how the performance of the algorithm changes as the size of he input increases
	- Two types of complexity:
		- Time complexity - The number of operations an algorithm performs
		- Space complexity - How much memory an algorithm uses
	- Time complexity is focused since we want an algorithm to run quickly
	- The complexity of an algorithm is expressed using "big-O" notation
		- O(n^2)
		- n is size of the output

- Linear time 
	- O(n) is called linear time
		- The number of operations needed increases at the same rate as the size of the input
